/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package sn.analytics.type;  
@SuppressWarnings("all")
/** Accesslogdata */
@org.apache.avro.specific.AvroGenerated
public class LogData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LogData\",\"namespace\":\"sn.analytics.type\",\"doc\":\"Accesslogdata\",\"fields\":[{\"name\":\"accessUrl\",\"type\":\"string\"},{\"name\":\"responseStatusCode\",\"type\":\"int\"},{\"name\":\"responseTime\",\"type\":\"int\"},{\"name\":\"receivedTimestamp\",\"type\":\"long\"},{\"name\":\"requestVerb\",\"type\":\"string\"},{\"name\":\"requestSize\",\"type\":\"int\"},{\"name\":\"dataExchangeSize\",\"type\":\"int\"},{\"name\":\"serverIp\",\"type\":\"string\"},{\"name\":\"clientIp\",\"type\":\"string\"},{\"name\":\"clientId\",\"type\":\"string\"},{\"name\":\"sessionId\",\"type\":\"string\"},{\"name\":\"userAgentDevice\",\"type\":\"string\"},{\"name\":\"UserAgentType\",\"type\":\"string\"},{\"name\":\"userAgentFamily\",\"type\":\"string\"},{\"name\":\"userAgentOSFamily\",\"type\":\"string\"},{\"name\":\"userAgentVersion\",\"type\":\"string\"},{\"name\":\"userAgentOSVersion\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"},{\"name\":\"minOfDay\",\"type\":\"int\"},{\"name\":\"hourOfDay\",\"type\":\"int\"},{\"name\":\"dayOfWeek\",\"type\":\"int\"},{\"name\":\"monthOfYear\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence accessUrl;
  @Deprecated public int responseStatusCode;
  @Deprecated public int responseTime;
  @Deprecated public long receivedTimestamp;
  @Deprecated public java.lang.CharSequence requestVerb;
  @Deprecated public int requestSize;
  @Deprecated public int dataExchangeSize;
  @Deprecated public java.lang.CharSequence serverIp;
  @Deprecated public java.lang.CharSequence clientIp;
  @Deprecated public java.lang.CharSequence clientId;
  @Deprecated public java.lang.CharSequence sessionId;
  @Deprecated public java.lang.CharSequence userAgentDevice;
  @Deprecated public java.lang.CharSequence UserAgentType;
  @Deprecated public java.lang.CharSequence userAgentFamily;
  @Deprecated public java.lang.CharSequence userAgentOSFamily;
  @Deprecated public java.lang.CharSequence userAgentVersion;
  @Deprecated public java.lang.CharSequence userAgentOSVersion;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public java.lang.CharSequence region;
  @Deprecated public int minOfDay;
  @Deprecated public int hourOfDay;
  @Deprecated public int dayOfWeek;
  @Deprecated public int monthOfYear;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LogData() {}

  /**
   * All-args constructor.
   */
  public LogData(java.lang.CharSequence accessUrl, java.lang.Integer responseStatusCode, java.lang.Integer responseTime, java.lang.Long receivedTimestamp, java.lang.CharSequence requestVerb, java.lang.Integer requestSize, java.lang.Integer dataExchangeSize, java.lang.CharSequence serverIp, java.lang.CharSequence clientIp, java.lang.CharSequence clientId, java.lang.CharSequence sessionId, java.lang.CharSequence userAgentDevice, java.lang.CharSequence UserAgentType, java.lang.CharSequence userAgentFamily, java.lang.CharSequence userAgentOSFamily, java.lang.CharSequence userAgentVersion, java.lang.CharSequence userAgentOSVersion, java.lang.CharSequence city, java.lang.CharSequence country, java.lang.CharSequence region, java.lang.Integer minOfDay, java.lang.Integer hourOfDay, java.lang.Integer dayOfWeek, java.lang.Integer monthOfYear) {
    this.accessUrl = accessUrl;
    this.responseStatusCode = responseStatusCode;
    this.responseTime = responseTime;
    this.receivedTimestamp = receivedTimestamp;
    this.requestVerb = requestVerb;
    this.requestSize = requestSize;
    this.dataExchangeSize = dataExchangeSize;
    this.serverIp = serverIp;
    this.clientIp = clientIp;
    this.clientId = clientId;
    this.sessionId = sessionId;
    this.userAgentDevice = userAgentDevice;
    this.UserAgentType = UserAgentType;
    this.userAgentFamily = userAgentFamily;
    this.userAgentOSFamily = userAgentOSFamily;
    this.userAgentVersion = userAgentVersion;
    this.userAgentOSVersion = userAgentOSVersion;
    this.city = city;
    this.country = country;
    this.region = region;
    this.minOfDay = minOfDay;
    this.hourOfDay = hourOfDay;
    this.dayOfWeek = dayOfWeek;
    this.monthOfYear = monthOfYear;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return accessUrl;
    case 1: return responseStatusCode;
    case 2: return responseTime;
    case 3: return receivedTimestamp;
    case 4: return requestVerb;
    case 5: return requestSize;
    case 6: return dataExchangeSize;
    case 7: return serverIp;
    case 8: return clientIp;
    case 9: return clientId;
    case 10: return sessionId;
    case 11: return userAgentDevice;
    case 12: return UserAgentType;
    case 13: return userAgentFamily;
    case 14: return userAgentOSFamily;
    case 15: return userAgentVersion;
    case 16: return userAgentOSVersion;
    case 17: return city;
    case 18: return country;
    case 19: return region;
    case 20: return minOfDay;
    case 21: return hourOfDay;
    case 22: return dayOfWeek;
    case 23: return monthOfYear;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: accessUrl = (java.lang.CharSequence)value$; break;
    case 1: responseStatusCode = (java.lang.Integer)value$; break;
    case 2: responseTime = (java.lang.Integer)value$; break;
    case 3: receivedTimestamp = (java.lang.Long)value$; break;
    case 4: requestVerb = (java.lang.CharSequence)value$; break;
    case 5: requestSize = (java.lang.Integer)value$; break;
    case 6: dataExchangeSize = (java.lang.Integer)value$; break;
    case 7: serverIp = (java.lang.CharSequence)value$; break;
    case 8: clientIp = (java.lang.CharSequence)value$; break;
    case 9: clientId = (java.lang.CharSequence)value$; break;
    case 10: sessionId = (java.lang.CharSequence)value$; break;
    case 11: userAgentDevice = (java.lang.CharSequence)value$; break;
    case 12: UserAgentType = (java.lang.CharSequence)value$; break;
    case 13: userAgentFamily = (java.lang.CharSequence)value$; break;
    case 14: userAgentOSFamily = (java.lang.CharSequence)value$; break;
    case 15: userAgentVersion = (java.lang.CharSequence)value$; break;
    case 16: userAgentOSVersion = (java.lang.CharSequence)value$; break;
    case 17: city = (java.lang.CharSequence)value$; break;
    case 18: country = (java.lang.CharSequence)value$; break;
    case 19: region = (java.lang.CharSequence)value$; break;
    case 20: minOfDay = (java.lang.Integer)value$; break;
    case 21: hourOfDay = (java.lang.Integer)value$; break;
    case 22: dayOfWeek = (java.lang.Integer)value$; break;
    case 23: monthOfYear = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'accessUrl' field.
   */
  public java.lang.CharSequence getAccessUrl() {
    return accessUrl;
  }

  /**
   * Sets the value of the 'accessUrl' field.
   * @param value the value to set.
   */
  public void setAccessUrl(java.lang.CharSequence value) {
    this.accessUrl = value;
  }

  /**
   * Gets the value of the 'responseStatusCode' field.
   */
  public java.lang.Integer getResponseStatusCode() {
    return responseStatusCode;
  }

  /**
   * Sets the value of the 'responseStatusCode' field.
   * @param value the value to set.
   */
  public void setResponseStatusCode(java.lang.Integer value) {
    this.responseStatusCode = value;
  }

  /**
   * Gets the value of the 'responseTime' field.
   */
  public java.lang.Integer getResponseTime() {
    return responseTime;
  }

  /**
   * Sets the value of the 'responseTime' field.
   * @param value the value to set.
   */
  public void setResponseTime(java.lang.Integer value) {
    this.responseTime = value;
  }

  /**
   * Gets the value of the 'receivedTimestamp' field.
   */
  public java.lang.Long getReceivedTimestamp() {
    return receivedTimestamp;
  }

  /**
   * Sets the value of the 'receivedTimestamp' field.
   * @param value the value to set.
   */
  public void setReceivedTimestamp(java.lang.Long value) {
    this.receivedTimestamp = value;
  }

  /**
   * Gets the value of the 'requestVerb' field.
   */
  public java.lang.CharSequence getRequestVerb() {
    return requestVerb;
  }

  /**
   * Sets the value of the 'requestVerb' field.
   * @param value the value to set.
   */
  public void setRequestVerb(java.lang.CharSequence value) {
    this.requestVerb = value;
  }

  /**
   * Gets the value of the 'requestSize' field.
   */
  public java.lang.Integer getRequestSize() {
    return requestSize;
  }

  /**
   * Sets the value of the 'requestSize' field.
   * @param value the value to set.
   */
  public void setRequestSize(java.lang.Integer value) {
    this.requestSize = value;
  }

  /**
   * Gets the value of the 'dataExchangeSize' field.
   */
  public java.lang.Integer getDataExchangeSize() {
    return dataExchangeSize;
  }

  /**
   * Sets the value of the 'dataExchangeSize' field.
   * @param value the value to set.
   */
  public void setDataExchangeSize(java.lang.Integer value) {
    this.dataExchangeSize = value;
  }

  /**
   * Gets the value of the 'serverIp' field.
   */
  public java.lang.CharSequence getServerIp() {
    return serverIp;
  }

  /**
   * Sets the value of the 'serverIp' field.
   * @param value the value to set.
   */
  public void setServerIp(java.lang.CharSequence value) {
    this.serverIp = value;
  }

  /**
   * Gets the value of the 'clientIp' field.
   */
  public java.lang.CharSequence getClientIp() {
    return clientIp;
  }

  /**
   * Sets the value of the 'clientIp' field.
   * @param value the value to set.
   */
  public void setClientIp(java.lang.CharSequence value) {
    this.clientIp = value;
  }

  /**
   * Gets the value of the 'clientId' field.
   */
  public java.lang.CharSequence getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.CharSequence value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   */
  public java.lang.CharSequence getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(java.lang.CharSequence value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'userAgentDevice' field.
   */
  public java.lang.CharSequence getUserAgentDevice() {
    return userAgentDevice;
  }

  /**
   * Sets the value of the 'userAgentDevice' field.
   * @param value the value to set.
   */
  public void setUserAgentDevice(java.lang.CharSequence value) {
    this.userAgentDevice = value;
  }

  /**
   * Gets the value of the 'UserAgentType' field.
   */
  public java.lang.CharSequence getUserAgentType() {
    return UserAgentType;
  }

  /**
   * Sets the value of the 'UserAgentType' field.
   * @param value the value to set.
   */
  public void setUserAgentType(java.lang.CharSequence value) {
    this.UserAgentType = value;
  }

  /**
   * Gets the value of the 'userAgentFamily' field.
   */
  public java.lang.CharSequence getUserAgentFamily() {
    return userAgentFamily;
  }

  /**
   * Sets the value of the 'userAgentFamily' field.
   * @param value the value to set.
   */
  public void setUserAgentFamily(java.lang.CharSequence value) {
    this.userAgentFamily = value;
  }

  /**
   * Gets the value of the 'userAgentOSFamily' field.
   */
  public java.lang.CharSequence getUserAgentOSFamily() {
    return userAgentOSFamily;
  }

  /**
   * Sets the value of the 'userAgentOSFamily' field.
   * @param value the value to set.
   */
  public void setUserAgentOSFamily(java.lang.CharSequence value) {
    this.userAgentOSFamily = value;
  }

  /**
   * Gets the value of the 'userAgentVersion' field.
   */
  public java.lang.CharSequence getUserAgentVersion() {
    return userAgentVersion;
  }

  /**
   * Sets the value of the 'userAgentVersion' field.
   * @param value the value to set.
   */
  public void setUserAgentVersion(java.lang.CharSequence value) {
    this.userAgentVersion = value;
  }

  /**
   * Gets the value of the 'userAgentOSVersion' field.
   */
  public java.lang.CharSequence getUserAgentOSVersion() {
    return userAgentOSVersion;
  }

  /**
   * Sets the value of the 'userAgentOSVersion' field.
   * @param value the value to set.
   */
  public void setUserAgentOSVersion(java.lang.CharSequence value) {
    this.userAgentOSVersion = value;
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'region' field.
   */
  public java.lang.CharSequence getRegion() {
    return region;
  }

  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'minOfDay' field.
   */
  public java.lang.Integer getMinOfDay() {
    return minOfDay;
  }

  /**
   * Sets the value of the 'minOfDay' field.
   * @param value the value to set.
   */
  public void setMinOfDay(java.lang.Integer value) {
    this.minOfDay = value;
  }

  /**
   * Gets the value of the 'hourOfDay' field.
   */
  public java.lang.Integer getHourOfDay() {
    return hourOfDay;
  }

  /**
   * Sets the value of the 'hourOfDay' field.
   * @param value the value to set.
   */
  public void setHourOfDay(java.lang.Integer value) {
    this.hourOfDay = value;
  }

  /**
   * Gets the value of the 'dayOfWeek' field.
   */
  public java.lang.Integer getDayOfWeek() {
    return dayOfWeek;
  }

  /**
   * Sets the value of the 'dayOfWeek' field.
   * @param value the value to set.
   */
  public void setDayOfWeek(java.lang.Integer value) {
    this.dayOfWeek = value;
  }

  /**
   * Gets the value of the 'monthOfYear' field.
   */
  public java.lang.Integer getMonthOfYear() {
    return monthOfYear;
  }

  /**
   * Sets the value of the 'monthOfYear' field.
   * @param value the value to set.
   */
  public void setMonthOfYear(java.lang.Integer value) {
    this.monthOfYear = value;
  }

  /** Creates a new LogData RecordBuilder */
  public static sn.analytics.type.LogData.Builder newBuilder() {
    return new sn.analytics.type.LogData.Builder();
  }
  
  /** Creates a new LogData RecordBuilder by copying an existing Builder */
  public static sn.analytics.type.LogData.Builder newBuilder(sn.analytics.type.LogData.Builder other) {
    return new sn.analytics.type.LogData.Builder(other);
  }
  
  /** Creates a new LogData RecordBuilder by copying an existing LogData instance */
  public static sn.analytics.type.LogData.Builder newBuilder(sn.analytics.type.LogData other) {
    return new sn.analytics.type.LogData.Builder(other);
  }
  
  /**
   * RecordBuilder for LogData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LogData>
    implements org.apache.avro.data.RecordBuilder<LogData> {

    private java.lang.CharSequence accessUrl;
    private int responseStatusCode;
    private int responseTime;
    private long receivedTimestamp;
    private java.lang.CharSequence requestVerb;
    private int requestSize;
    private int dataExchangeSize;
    private java.lang.CharSequence serverIp;
    private java.lang.CharSequence clientIp;
    private java.lang.CharSequence clientId;
    private java.lang.CharSequence sessionId;
    private java.lang.CharSequence userAgentDevice;
    private java.lang.CharSequence UserAgentType;
    private java.lang.CharSequence userAgentFamily;
    private java.lang.CharSequence userAgentOSFamily;
    private java.lang.CharSequence userAgentVersion;
    private java.lang.CharSequence userAgentOSVersion;
    private java.lang.CharSequence city;
    private java.lang.CharSequence country;
    private java.lang.CharSequence region;
    private int minOfDay;
    private int hourOfDay;
    private int dayOfWeek;
    private int monthOfYear;

    /** Creates a new Builder */
    private Builder() {
      super(sn.analytics.type.LogData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(sn.analytics.type.LogData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.accessUrl)) {
        this.accessUrl = data().deepCopy(fields()[0].schema(), other.accessUrl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.responseStatusCode)) {
        this.responseStatusCode = data().deepCopy(fields()[1].schema(), other.responseStatusCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.responseTime)) {
        this.responseTime = data().deepCopy(fields()[2].schema(), other.responseTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receivedTimestamp)) {
        this.receivedTimestamp = data().deepCopy(fields()[3].schema(), other.receivedTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestVerb)) {
        this.requestVerb = data().deepCopy(fields()[4].schema(), other.requestVerb);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.requestSize)) {
        this.requestSize = data().deepCopy(fields()[5].schema(), other.requestSize);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.dataExchangeSize)) {
        this.dataExchangeSize = data().deepCopy(fields()[6].schema(), other.dataExchangeSize);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serverIp)) {
        this.serverIp = data().deepCopy(fields()[7].schema(), other.serverIp);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.clientIp)) {
        this.clientIp = data().deepCopy(fields()[8].schema(), other.clientIp);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.clientId)) {
        this.clientId = data().deepCopy(fields()[9].schema(), other.clientId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[10].schema(), other.sessionId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.userAgentDevice)) {
        this.userAgentDevice = data().deepCopy(fields()[11].schema(), other.userAgentDevice);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.UserAgentType)) {
        this.UserAgentType = data().deepCopy(fields()[12].schema(), other.UserAgentType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.userAgentFamily)) {
        this.userAgentFamily = data().deepCopy(fields()[13].schema(), other.userAgentFamily);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.userAgentOSFamily)) {
        this.userAgentOSFamily = data().deepCopy(fields()[14].schema(), other.userAgentOSFamily);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.userAgentVersion)) {
        this.userAgentVersion = data().deepCopy(fields()[15].schema(), other.userAgentVersion);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.userAgentOSVersion)) {
        this.userAgentOSVersion = data().deepCopy(fields()[16].schema(), other.userAgentOSVersion);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.city)) {
        this.city = data().deepCopy(fields()[17].schema(), other.city);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.country)) {
        this.country = data().deepCopy(fields()[18].schema(), other.country);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.region)) {
        this.region = data().deepCopy(fields()[19].schema(), other.region);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.minOfDay)) {
        this.minOfDay = data().deepCopy(fields()[20].schema(), other.minOfDay);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.hourOfDay)) {
        this.hourOfDay = data().deepCopy(fields()[21].schema(), other.hourOfDay);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dayOfWeek)) {
        this.dayOfWeek = data().deepCopy(fields()[22].schema(), other.dayOfWeek);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.monthOfYear)) {
        this.monthOfYear = data().deepCopy(fields()[23].schema(), other.monthOfYear);
        fieldSetFlags()[23] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LogData instance */
    private Builder(sn.analytics.type.LogData other) {
            super(sn.analytics.type.LogData.SCHEMA$);
      if (isValidValue(fields()[0], other.accessUrl)) {
        this.accessUrl = data().deepCopy(fields()[0].schema(), other.accessUrl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.responseStatusCode)) {
        this.responseStatusCode = data().deepCopy(fields()[1].schema(), other.responseStatusCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.responseTime)) {
        this.responseTime = data().deepCopy(fields()[2].schema(), other.responseTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receivedTimestamp)) {
        this.receivedTimestamp = data().deepCopy(fields()[3].schema(), other.receivedTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestVerb)) {
        this.requestVerb = data().deepCopy(fields()[4].schema(), other.requestVerb);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.requestSize)) {
        this.requestSize = data().deepCopy(fields()[5].schema(), other.requestSize);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.dataExchangeSize)) {
        this.dataExchangeSize = data().deepCopy(fields()[6].schema(), other.dataExchangeSize);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serverIp)) {
        this.serverIp = data().deepCopy(fields()[7].schema(), other.serverIp);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.clientIp)) {
        this.clientIp = data().deepCopy(fields()[8].schema(), other.clientIp);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.clientId)) {
        this.clientId = data().deepCopy(fields()[9].schema(), other.clientId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[10].schema(), other.sessionId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.userAgentDevice)) {
        this.userAgentDevice = data().deepCopy(fields()[11].schema(), other.userAgentDevice);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.UserAgentType)) {
        this.UserAgentType = data().deepCopy(fields()[12].schema(), other.UserAgentType);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.userAgentFamily)) {
        this.userAgentFamily = data().deepCopy(fields()[13].schema(), other.userAgentFamily);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.userAgentOSFamily)) {
        this.userAgentOSFamily = data().deepCopy(fields()[14].schema(), other.userAgentOSFamily);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.userAgentVersion)) {
        this.userAgentVersion = data().deepCopy(fields()[15].schema(), other.userAgentVersion);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.userAgentOSVersion)) {
        this.userAgentOSVersion = data().deepCopy(fields()[16].schema(), other.userAgentOSVersion);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.city)) {
        this.city = data().deepCopy(fields()[17].schema(), other.city);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.country)) {
        this.country = data().deepCopy(fields()[18].schema(), other.country);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.region)) {
        this.region = data().deepCopy(fields()[19].schema(), other.region);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.minOfDay)) {
        this.minOfDay = data().deepCopy(fields()[20].schema(), other.minOfDay);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.hourOfDay)) {
        this.hourOfDay = data().deepCopy(fields()[21].schema(), other.hourOfDay);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dayOfWeek)) {
        this.dayOfWeek = data().deepCopy(fields()[22].schema(), other.dayOfWeek);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.monthOfYear)) {
        this.monthOfYear = data().deepCopy(fields()[23].schema(), other.monthOfYear);
        fieldSetFlags()[23] = true;
      }
    }

    /** Gets the value of the 'accessUrl' field */
    public java.lang.CharSequence getAccessUrl() {
      return accessUrl;
    }
    
    /** Sets the value of the 'accessUrl' field */
    public sn.analytics.type.LogData.Builder setAccessUrl(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.accessUrl = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'accessUrl' field has been set */
    public boolean hasAccessUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'accessUrl' field */
    public sn.analytics.type.LogData.Builder clearAccessUrl() {
      accessUrl = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'responseStatusCode' field */
    public java.lang.Integer getResponseStatusCode() {
      return responseStatusCode;
    }
    
    /** Sets the value of the 'responseStatusCode' field */
    public sn.analytics.type.LogData.Builder setResponseStatusCode(int value) {
      validate(fields()[1], value);
      this.responseStatusCode = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'responseStatusCode' field has been set */
    public boolean hasResponseStatusCode() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'responseStatusCode' field */
    public sn.analytics.type.LogData.Builder clearResponseStatusCode() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'responseTime' field */
    public java.lang.Integer getResponseTime() {
      return responseTime;
    }
    
    /** Sets the value of the 'responseTime' field */
    public sn.analytics.type.LogData.Builder setResponseTime(int value) {
      validate(fields()[2], value);
      this.responseTime = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'responseTime' field has been set */
    public boolean hasResponseTime() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'responseTime' field */
    public sn.analytics.type.LogData.Builder clearResponseTime() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'receivedTimestamp' field */
    public java.lang.Long getReceivedTimestamp() {
      return receivedTimestamp;
    }
    
    /** Sets the value of the 'receivedTimestamp' field */
    public sn.analytics.type.LogData.Builder setReceivedTimestamp(long value) {
      validate(fields()[3], value);
      this.receivedTimestamp = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'receivedTimestamp' field has been set */
    public boolean hasReceivedTimestamp() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'receivedTimestamp' field */
    public sn.analytics.type.LogData.Builder clearReceivedTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'requestVerb' field */
    public java.lang.CharSequence getRequestVerb() {
      return requestVerb;
    }
    
    /** Sets the value of the 'requestVerb' field */
    public sn.analytics.type.LogData.Builder setRequestVerb(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.requestVerb = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'requestVerb' field has been set */
    public boolean hasRequestVerb() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'requestVerb' field */
    public sn.analytics.type.LogData.Builder clearRequestVerb() {
      requestVerb = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'requestSize' field */
    public java.lang.Integer getRequestSize() {
      return requestSize;
    }
    
    /** Sets the value of the 'requestSize' field */
    public sn.analytics.type.LogData.Builder setRequestSize(int value) {
      validate(fields()[5], value);
      this.requestSize = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'requestSize' field has been set */
    public boolean hasRequestSize() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'requestSize' field */
    public sn.analytics.type.LogData.Builder clearRequestSize() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'dataExchangeSize' field */
    public java.lang.Integer getDataExchangeSize() {
      return dataExchangeSize;
    }
    
    /** Sets the value of the 'dataExchangeSize' field */
    public sn.analytics.type.LogData.Builder setDataExchangeSize(int value) {
      validate(fields()[6], value);
      this.dataExchangeSize = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'dataExchangeSize' field has been set */
    public boolean hasDataExchangeSize() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'dataExchangeSize' field */
    public sn.analytics.type.LogData.Builder clearDataExchangeSize() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'serverIp' field */
    public java.lang.CharSequence getServerIp() {
      return serverIp;
    }
    
    /** Sets the value of the 'serverIp' field */
    public sn.analytics.type.LogData.Builder setServerIp(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.serverIp = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'serverIp' field has been set */
    public boolean hasServerIp() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'serverIp' field */
    public sn.analytics.type.LogData.Builder clearServerIp() {
      serverIp = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'clientIp' field */
    public java.lang.CharSequence getClientIp() {
      return clientIp;
    }
    
    /** Sets the value of the 'clientIp' field */
    public sn.analytics.type.LogData.Builder setClientIp(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.clientIp = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'clientIp' field has been set */
    public boolean hasClientIp() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'clientIp' field */
    public sn.analytics.type.LogData.Builder clearClientIp() {
      clientIp = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'clientId' field */
    public java.lang.CharSequence getClientId() {
      return clientId;
    }
    
    /** Sets the value of the 'clientId' field */
    public sn.analytics.type.LogData.Builder setClientId(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.clientId = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'clientId' field has been set */
    public boolean hasClientId() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'clientId' field */
    public sn.analytics.type.LogData.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'sessionId' field */
    public java.lang.CharSequence getSessionId() {
      return sessionId;
    }
    
    /** Sets the value of the 'sessionId' field */
    public sn.analytics.type.LogData.Builder setSessionId(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.sessionId = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'sessionId' field has been set */
    public boolean hasSessionId() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'sessionId' field */
    public sn.analytics.type.LogData.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'userAgentDevice' field */
    public java.lang.CharSequence getUserAgentDevice() {
      return userAgentDevice;
    }
    
    /** Sets the value of the 'userAgentDevice' field */
    public sn.analytics.type.LogData.Builder setUserAgentDevice(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.userAgentDevice = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'userAgentDevice' field has been set */
    public boolean hasUserAgentDevice() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'userAgentDevice' field */
    public sn.analytics.type.LogData.Builder clearUserAgentDevice() {
      userAgentDevice = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'UserAgentType' field */
    public java.lang.CharSequence getUserAgentType() {
      return UserAgentType;
    }
    
    /** Sets the value of the 'UserAgentType' field */
    public sn.analytics.type.LogData.Builder setUserAgentType(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.UserAgentType = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'UserAgentType' field has been set */
    public boolean hasUserAgentType() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'UserAgentType' field */
    public sn.analytics.type.LogData.Builder clearUserAgentType() {
      UserAgentType = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'userAgentFamily' field */
    public java.lang.CharSequence getUserAgentFamily() {
      return userAgentFamily;
    }
    
    /** Sets the value of the 'userAgentFamily' field */
    public sn.analytics.type.LogData.Builder setUserAgentFamily(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.userAgentFamily = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'userAgentFamily' field has been set */
    public boolean hasUserAgentFamily() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'userAgentFamily' field */
    public sn.analytics.type.LogData.Builder clearUserAgentFamily() {
      userAgentFamily = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'userAgentOSFamily' field */
    public java.lang.CharSequence getUserAgentOSFamily() {
      return userAgentOSFamily;
    }
    
    /** Sets the value of the 'userAgentOSFamily' field */
    public sn.analytics.type.LogData.Builder setUserAgentOSFamily(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.userAgentOSFamily = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'userAgentOSFamily' field has been set */
    public boolean hasUserAgentOSFamily() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'userAgentOSFamily' field */
    public sn.analytics.type.LogData.Builder clearUserAgentOSFamily() {
      userAgentOSFamily = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'userAgentVersion' field */
    public java.lang.CharSequence getUserAgentVersion() {
      return userAgentVersion;
    }
    
    /** Sets the value of the 'userAgentVersion' field */
    public sn.analytics.type.LogData.Builder setUserAgentVersion(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.userAgentVersion = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'userAgentVersion' field has been set */
    public boolean hasUserAgentVersion() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'userAgentVersion' field */
    public sn.analytics.type.LogData.Builder clearUserAgentVersion() {
      userAgentVersion = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'userAgentOSVersion' field */
    public java.lang.CharSequence getUserAgentOSVersion() {
      return userAgentOSVersion;
    }
    
    /** Sets the value of the 'userAgentOSVersion' field */
    public sn.analytics.type.LogData.Builder setUserAgentOSVersion(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.userAgentOSVersion = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'userAgentOSVersion' field has been set */
    public boolean hasUserAgentOSVersion() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'userAgentOSVersion' field */
    public sn.analytics.type.LogData.Builder clearUserAgentOSVersion() {
      userAgentOSVersion = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'city' field */
    public java.lang.CharSequence getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public sn.analytics.type.LogData.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.city = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'city' field */
    public sn.analytics.type.LogData.Builder clearCity() {
      city = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public sn.analytics.type.LogData.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.country = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'country' field */
    public sn.analytics.type.LogData.Builder clearCountry() {
      country = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'region' field */
    public java.lang.CharSequence getRegion() {
      return region;
    }
    
    /** Sets the value of the 'region' field */
    public sn.analytics.type.LogData.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.region = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'region' field has been set */
    public boolean hasRegion() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'region' field */
    public sn.analytics.type.LogData.Builder clearRegion() {
      region = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'minOfDay' field */
    public java.lang.Integer getMinOfDay() {
      return minOfDay;
    }
    
    /** Sets the value of the 'minOfDay' field */
    public sn.analytics.type.LogData.Builder setMinOfDay(int value) {
      validate(fields()[20], value);
      this.minOfDay = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'minOfDay' field has been set */
    public boolean hasMinOfDay() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'minOfDay' field */
    public sn.analytics.type.LogData.Builder clearMinOfDay() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'hourOfDay' field */
    public java.lang.Integer getHourOfDay() {
      return hourOfDay;
    }
    
    /** Sets the value of the 'hourOfDay' field */
    public sn.analytics.type.LogData.Builder setHourOfDay(int value) {
      validate(fields()[21], value);
      this.hourOfDay = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'hourOfDay' field has been set */
    public boolean hasHourOfDay() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'hourOfDay' field */
    public sn.analytics.type.LogData.Builder clearHourOfDay() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'dayOfWeek' field */
    public java.lang.Integer getDayOfWeek() {
      return dayOfWeek;
    }
    
    /** Sets the value of the 'dayOfWeek' field */
    public sn.analytics.type.LogData.Builder setDayOfWeek(int value) {
      validate(fields()[22], value);
      this.dayOfWeek = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'dayOfWeek' field has been set */
    public boolean hasDayOfWeek() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'dayOfWeek' field */
    public sn.analytics.type.LogData.Builder clearDayOfWeek() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'monthOfYear' field */
    public java.lang.Integer getMonthOfYear() {
      return monthOfYear;
    }
    
    /** Sets the value of the 'monthOfYear' field */
    public sn.analytics.type.LogData.Builder setMonthOfYear(int value) {
      validate(fields()[23], value);
      this.monthOfYear = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'monthOfYear' field has been set */
    public boolean hasMonthOfYear() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'monthOfYear' field */
    public sn.analytics.type.LogData.Builder clearMonthOfYear() {
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    public LogData build() {
      try {
        LogData record = new LogData();
        record.accessUrl = fieldSetFlags()[0] ? this.accessUrl : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.responseStatusCode = fieldSetFlags()[1] ? this.responseStatusCode : (java.lang.Integer) defaultValue(fields()[1]);
        record.responseTime = fieldSetFlags()[2] ? this.responseTime : (java.lang.Integer) defaultValue(fields()[2]);
        record.receivedTimestamp = fieldSetFlags()[3] ? this.receivedTimestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.requestVerb = fieldSetFlags()[4] ? this.requestVerb : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.requestSize = fieldSetFlags()[5] ? this.requestSize : (java.lang.Integer) defaultValue(fields()[5]);
        record.dataExchangeSize = fieldSetFlags()[6] ? this.dataExchangeSize : (java.lang.Integer) defaultValue(fields()[6]);
        record.serverIp = fieldSetFlags()[7] ? this.serverIp : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.clientIp = fieldSetFlags()[8] ? this.clientIp : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.clientId = fieldSetFlags()[9] ? this.clientId : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.sessionId = fieldSetFlags()[10] ? this.sessionId : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.userAgentDevice = fieldSetFlags()[11] ? this.userAgentDevice : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.UserAgentType = fieldSetFlags()[12] ? this.UserAgentType : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.userAgentFamily = fieldSetFlags()[13] ? this.userAgentFamily : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.userAgentOSFamily = fieldSetFlags()[14] ? this.userAgentOSFamily : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.userAgentVersion = fieldSetFlags()[15] ? this.userAgentVersion : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.userAgentOSVersion = fieldSetFlags()[16] ? this.userAgentOSVersion : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.city = fieldSetFlags()[17] ? this.city : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.country = fieldSetFlags()[18] ? this.country : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.region = fieldSetFlags()[19] ? this.region : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.minOfDay = fieldSetFlags()[20] ? this.minOfDay : (java.lang.Integer) defaultValue(fields()[20]);
        record.hourOfDay = fieldSetFlags()[21] ? this.hourOfDay : (java.lang.Integer) defaultValue(fields()[21]);
        record.dayOfWeek = fieldSetFlags()[22] ? this.dayOfWeek : (java.lang.Integer) defaultValue(fields()[22]);
        record.monthOfYear = fieldSetFlags()[23] ? this.monthOfYear : (java.lang.Integer) defaultValue(fields()[23]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
